@page "/auth/login"
@inject AuthService      Auth
@inject NavigationManager Nav
@using TimeStock.Shared.Dtos
@using Client.Services

<h3>Connexion</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

<EditForm Model="@LoginModel" OnValidSubmit="OnLoginClicked">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label>Email</label>
        <InputText class="form-control" @bind-Value="LoginModel.Email" />
    </div>

    <div class="mb-3">
        <label>Mot de passe</label>
        <InputText type="password" class="form-control" @bind-Value="LoginModel.Password" />
    </div>

    <button class="btn btn-primary" type="submit" disabled="@IsBusy">
        @(IsBusy ? "Connexion..." : "Se connecter")
    </button>
</EditForm>

@code {
    private readonly LoginDto LoginModel = new();
    private string? ErrorMessage;
    private bool IsBusy;

    private async Task OnLoginClicked()
    {
        IsBusy = true;
        ErrorMessage = null;

        var ok = await Auth.LoginAsync(LoginModel);

        IsBusy = false;

        if (ok)
            Nav.NavigateTo("/", forceLoad: false);
        else
            ErrorMessage = "Email ou mot de passe invalide.";
    }
}
