# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ main, ci-integration ]
  pull_request:

env:
  REGISTRY: ghcr.io
  DOTNET_VERSION: "8.0.x"

jobs:
  build-test-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 1) Checkout
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.SUBMODULE_PAT }}

      # 2) Setup .NET + cache NuGet
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          cache: true
          cache-dependency-path: |
            TimeStock.sln
            src/**/*.csproj
            tests/**/*.csproj

      # 3) Build & tests + couverture
      - run: dotnet restore
      - run: dotnet build --no-restore -c Release
      - run: |
          dotnet test --no-build -c Release \
            --collect:"XPlat Code Coverage" \
            /p:CoverletOutputFormat=cobertura \
            /p:CoverletOutput=TestResults/coverage/
      - name: Publish coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            **/TestResults/coverage/coverage.cobertura.xml

      # 4) Setup Buildx
      - uses: docker/setup-buildx-action@v3
        with:
          install: true

      # 5) Lowercase image prefix
      - name: Set lowercase image prefix
        id: vars
        run: |
          echo "IMAGE_PREFIX_LOWER=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      # 6) Login to GHCR
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 7) Build & push Server image
      - name: Build & push Server
        uses: docker/build-push-action@v5
        with:
          context: .
          file: infrastructure/Docker/Dockerfile.server
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ steps.vars.outputs.IMAGE_PREFIX_LOWER }}-server:latest
            ${{ env.REGISTRY }}/${{ steps.vars.outputs.IMAGE_PREFIX_LOWER }}-server:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 8) Build & push Client image
      - name: Build & push Client
        uses: docker/build-push-action@v5
        with:
          context: .
          file: infrastructure/Docker/Dockerfile.client
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ steps.vars.outputs.IMAGE_PREFIX_LOWER }}-client:latest
            ${{ env.REGISTRY }}/${{ steps.vars.outputs.IMAGE_PREFIX_LOWER }}-client:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
